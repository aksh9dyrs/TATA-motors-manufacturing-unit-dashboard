services:
  python-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: python-backend
    restart: unless-stopped
    init: true
    # env_file: ./backend/.env  # Uncomment if .env file exists
    ports:
      - "8000:8000"  # Exposes FastAPI app
    depends_on:
      - postgres-db
    networks:
      - app-network

  js-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: js-frontend
    restart: unless-stopped
    # env_file: ./frontend/.env  # Uncomment if .env file exists
    ports:
      - "80:80"  # Exposes Nginx static frontend
    networks:
      - app-network

  postgres-db:
    image: postgres:latest
    container_name: postgres-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: appdb
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
    # Persistent storage for PostgreSQL
